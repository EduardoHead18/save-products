name: app-actions
on:
  push:
    branches:
      - develop
jobs:
  app-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: save jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: product-api-jar
          path: target/products-apirest-0.0.1-SNAPSHOT.jar

  git-clone:
    needs: app-build
    runs-on: ubuntu-latest
    steps:

      - name: Download artifact from GitHub Actions
        uses: actions/download-artifact@v4
        with:
          name: product-api-jar
          path: .

      - name: Clone or update repository on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          if [ -d "/home/${{ secrets.EC2_USER }}/save-products/.git" ]; then
            cd /home/${{ secrets.EC2_USER }}/save-products && git pull origin develop
          else
            git clone --branch develop https://github.com/EduardoHead18/save-products.git /home/${{ secrets.EC2_USER }}/save-products
          fi
          EOF

      - name: Transfer artifact to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "products-apirest-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.EC2_USER }}/save-products/target/"

  ec2-deploy:
    needs: git-clone
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from GitHub Actions
        uses: actions/download-artifact@v4
        with:
          name: product-api-jar
          path: .

      - name: Transfer artifact to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "products-apirest-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.EC2_USER }}/save-products/target/"
          script: |
            sudo docker compose up -d
          
