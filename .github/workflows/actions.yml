name: app-actions
on:
  push:
    branches:
      - develop
jobs:
  app-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: save jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: product-api-jar
          path: target/products-apirest-0.0.1-SNAPSHOT.jar

  git-clone:
    needs: app-build
    runs-on: ubuntu-latest
    steps:

      - name: Download artifact from GitHub Actions
        uses: actions/download-artifact@v4
        with:
          name: product-api-jar
          path: .

      - name: git clone
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo mkdir -p /home/${{ secrets.EC2_USERNAME }}/save-products
            sudo chown -R $USER:$USER /home/${{ secrets.EC2_USERNAME }}/save-products
            cd /home/${{ secrets.EC2_USERNAME }}/save-products
            if [ -d ".git" ]; then
              git pull origin develop
            else
              git clone --branch develop https://github.com/EduardoHead18/save-products.git .
            fi

      - name: Transfer artifact to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: "products-apirest-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.EC2_USER }}/save-products/target/"

  ec2-deploy:
    needs: git-clone
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from GitHub Actions
        uses: actions/download-artifact@v4
        with:
          name: product-api-jar
          path: .

      - name: Transfer artifact to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: "products-apirest-0.0.1-SNAPSHOT.jar"
          target: "/home/${{ secrets.EC2_USER }}/save-products/target/"
          script: |
            sudo docker compose up -d
          
